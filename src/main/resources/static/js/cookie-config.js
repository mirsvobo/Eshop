// Soubor: /js/cookie-config.js
// Verze v5 - Spolehlivƒõj≈°√≠ inicializace TrackingService a logov√°n√≠

const consentModeMap = {
    necessary: {},
    analytics: { analytics_storage: 'granted' },
    marketing: { ad_storage: 'granted', ad_user_data: 'granted', ad_personalization: 'granted' }
};

// Pomocn√° funkce pro z√≠sk√°n√≠ debug m√≥du, i kdy≈æ trackingService je≈°tƒõ nen√≠ plnƒõ inicializov√°na
function getDebugModeFlag() {
    if (window.trackingService && typeof window.trackingService.debugMode === 'boolean') {
        return window.trackingService.debugMode;
    }
    // Pokud je debugMode v mo≈ænostech instance TrackingService, a ta existuje
    if (window.trackingService && window.trackingService._googleAdsId) { // P≈ôedpoklad, ≈æe _googleAdsId je v≈ædy p≈ô√≠tomen
        const tsInstance = window.trackingService;
        if (typeof tsInstance.debugMode === 'boolean') return tsInstance.debugMode;
    }
    // Fallback, pokud nic jin√©ho nen√≠ k dispozici
    // M≈Ø≈æete nastavit defaultn√≠ hodnotu nebo se pokusit ƒç√≠st z glob√°ln√≠ promƒõnn√©
    // if (typeof window.GLOBAL_DEBUG_MODE === 'boolean') return window.GLOBAL_DEBUG_MODE;
    return true; // Default na false, pokud nen√≠ jinak specifikov√°no
}


function updateGoogleConsent(acceptedCategories) {
    const isDebugEnabled = getDebugModeFlag();
    let consentProcessedDispatched = false;

    if (isDebugEnabled) {
        console.log("[cookie-config.js updateGoogleConsent V5] Vol√°no s acceptedCategories:", JSON.stringify(acceptedCategories));
    }

    const consentUpdate = {
        analytics_storage: 'denied',
        ad_storage: 'denied',
        ad_user_data: 'denied',
        ad_personalization: 'denied'
    };

    if (acceptedCategories && Array.isArray(acceptedCategories)) {
        acceptedCategories.forEach(category => {
            if (consentModeMap[category]) {
                Object.assign(consentUpdate, consentModeMap[category]);
            }
        });
    }

    if (isDebugEnabled) console.log("[cookie-config.js updateGoogleConsent V5] Fin√°ln√≠ stav pro Google Consent Mode:", consentUpdate);

    const dispatchAndInitialize = (status, errorMsg = null) => {
        // Inicializace TrackingService PRVN√ç, aby byl debugMode dostupn√Ω co nejd≈ô√≠ve
        if (typeof TrackingService !== 'undefined') {
            if (!window.trackingService) {
                const options = {
                    debugMode: false, // Nastavte ZDE true/false dle pot≈ôeby, nebo p≈ôedejte zvenku
                    googleAdsId: 'AW-17046857865',
                    adsConversionLabelViewItem: '5icqCLa-n8EaEInRycA_',
                    adsConversionLabelAddToCart: 'KT_JCK2-n8EaEInRycA_',
                    adsConversionLabelBeginCheckout: 'YVBgCLC-n8EaEInRycA_',
                    adsConversionLabelPurchase: 'I-9yCKq-n8EaEInRycA_',
                    adsConversionLabelContact: 'QfVhCLO-n8EaEInRycA_'
                };
                try {
                    window.trackingService = new TrackingService(options);
                    // Nyn√≠ m≈Ø≈æeme bezpeƒçnƒõji p≈ôistupovat k this.debugMode v TrackingService
                    if (window.trackingService.debugMode) console.log('[cookie-config.js V5] TrackingService instance vytvo≈ôena.');
                    window.isTrackingServiceReady = true;
                    if (window.trackingService.initBaseScripts) {
                        window.trackingService.initBaseScripts();
                    }
                } catch (e) {
                    console.error('[cookie-config.js V5] CHYBA P≈òI INSTANCIACI TrackingService:', e);
                    window.isTrackingServiceReady = false;
                }
            } else {
                if (getDebugModeFlag()) console.log('[cookie-config.js V5] TrackingService ji≈æ byla inicializov√°na.');
            }
        } else {
            console.error('[cookie-config.js V5] T≈ô√≠da TrackingService nen√≠ definov√°na!');
            window.isTrackingServiceReady = false;
        }

        // Odesl√°n√≠ ud√°losti consentProcessed
        if (!consentProcessedDispatched) {
            consentProcessedDispatched = true;
            setTimeout(() => {
                const detail = { categories: acceptedCategories, consentState: consentUpdate, status: status };
                if (errorMsg) detail.error = errorMsg;
                if (getDebugModeFlag()) console.log(`[cookie-config.js V5] Vys√≠l√°m ud√°lost 'consentProcessed' (status: ${status}). Detail:`, detail);
                document.dispatchEvent(new CustomEvent('consentProcessed', { detail: detail }));

                if (typeof window.attemptToTriggerTrackingActions === 'function') {
                    window.attemptToTriggerTrackingActions('cookie-config.js after consent dispatch');
                }
            }, 50);
        }
    };

    if (typeof gtag === 'function') {
        try {
            gtag('consent', 'update', consentUpdate);
            if (getDebugModeFlag()) console.log("[cookie-config.js updateGoogleConsent V5] gtag('consent', 'update', ...) odesl√°n.");
            dispatchAndInitialize('success');
        } catch (error) {
            console.error("[cookie-config.js updateGoogleConsent V5] Chyba p≈ôi vol√°n√≠ gtag:", error);
            dispatchAndInitialize('error', 'gtag call failed');
        }
    } else {
        console.warn("[cookie-config.js updateGoogleConsent V5] Funkce gtag nebyla nalezena!");
        dispatchAndInitialize('error', 'gtag not found');
    }
}

if (typeof CookieConsent !== 'undefined') {
    CookieConsent.run({
        guiOptions: {
            consentModal: { layout: "box", position: "bottom right", equalWeightButtons: true, flipButtons: false },
            preferencesModal: { layout: "box", position: "right", equalWeightButtons: true, flipButtons: false }
        },
        categories: {
            necessary: { readOnly: true, enabled: true },
            analytics: { enabled: false, autoClear: { cookies: [{ name: /^_ga/ }, { name: '_gid' }, { name: '_gat_UA-' }, { name: '_gat_gtag_' }, { name: /^_dc_gtm_UA-/ }] } },
            marketing: { enabled: false, autoClear: { cookies: [{ name: '_gcl_au' }, { name: '_fbp' }, { name: 'IDE' }, { name: /_gac_.*/}, { name: '_uetmsclkid' }, { name: '_uetvid' }] } }
        },
        language: { /* ... (texty z≈Øst√°vaj√≠ stejn√©) ... */
            default: "cs",
            translations: { cs: {
                    consentModal:{title:"Pou≈æ√≠v√°me cookies üç™",description:"Tyto webov√© str√°nky pou≈æ√≠vaj√≠ nezbytn√© cookies k zaji≈°tƒõn√≠ spr√°vn√©ho fungov√°n√≠ a sledovac√≠/marketingov√© cookies k pochopen√≠ toho, jak s nimi komunikujete (vƒçetnƒõ personalizace reklam). Tyto budou nastaveny a≈æ po va≈°em souhlasu. <a href='/gdpr' target='_blank' class='cc__link'>V√≠ce informac√≠</a>",acceptAllBtn:"P≈ôijmout v≈°e",acceptNecessaryBtn:"Odm√≠tnout v≈°e",showPreferencesBtn:"Spravovat p≈ôedvolby",},preferencesModal:{title:"Nastaven√≠ souhlasu s cookies",acceptAllBtn:"P≈ôijmout v≈°e",acceptNecessaryBtn:"Odm√≠tnout v≈°e",savePreferencesBtn:"Ulo≈æit nastaven√≠",closeIconLabel:"Zav≈ô√≠t",serviceCounterLabel:"Slu≈æba|Slu≈æby",sections:[{title:"Pou≈æit√≠ cookies",description:"Na na≈°em webu pou≈æ√≠v√°me cookies, abychom V√°m poskytli co nejrelevantnƒõj≈°√≠ slu≈æby a funkce. Nƒõkter√© jsou nezbytn√©, zat√≠mco jin√© n√°m pom√°haj√≠ zlep≈°ovat tento web a v√°≈° z√°≈æitek (analytick√© a marketingov√© cookies)."},{title:"Nezbytn√© cookies <span class=\"pm__badge\">V≈ædy povolen√©</span>",description:"Tyto cookies jsou nezbytn√© pro z√°kladn√≠ funkƒçnost webu a nelze je vypnout. Zahrnuj√≠ nap≈ô√≠klad cookies pro spr√°vu session nebo n√°kupn√≠ho ko≈°√≠ku.",linkedCategory:"necessary"},{title:"Analytick√© cookies",description:"Tyto cookies n√°m pom√°haj√≠ pochopit, jak n√°v≈°tƒõvn√≠ci pou≈æ√≠vaj√≠ n√°≈° web, abychom jej mohli vylep≈°ovat. Sb√≠raj√≠ anonymizovan√° data (nap≈ô. Google Analytics).",linkedCategory:"analytics",},{title:"Marketingov√© cookies",description:"Tyto cookies se pou≈æ√≠vaj√≠ ke sledov√°n√≠ n√°v≈°tƒõvn√≠k≈Ø nap≈ô√≠ƒç webov√Ωmi str√°nkami. Z√°mƒõrem je zobrazovat reklamy, kter√© jsou relevantn√≠ (nap≈ô. Google Ads, Sklik retargeting) a mƒõ≈ôit jejich √∫ƒçinnost.",linkedCategory:"marketing"},{title:"V√≠ce informac√≠",description:"Pro v√≠ce informac√≠ o tom, jak pou≈æ√≠v√°me cookies, si pros√≠m p≈ôeƒçtƒõte na≈°e <a href='/gdpr' target='_blank' class='cc__link'>Z√°sady pou≈æ√≠v√°n√≠ cookies</a>."}]}
                }}
        },
        onFirstConsent: function({ categories }) {
            if (getDebugModeFlag()) console.log("CookieConsent onFirstConsent triggered (V5).");
            updateGoogleConsent(CookieConsent.getUserPreferences().acceptedCategories);
        },
        onConsent: function({ categories }) {
            if (getDebugModeFlag()) console.log("CookieConsent onConsent triggered (V5).");
            updateGoogleConsent(CookieConsent.getUserPreferences().acceptedCategories);
        },
        onChange: function({ categories }) {
            if (getDebugModeFlag()) console.log("CookieConsent onChange triggered (V5).");
            updateGoogleConsent(CookieConsent.getUserPreferences().acceptedCategories);
        }
    });
} else {
    console.error("[cookie-config.js V5] Knihovna CookieConsent nebyla nalezena.");
    setTimeout(() => {
        console.warn("[cookie-config.js V5] Vys√≠l√°m ud√°lost 'consentProcessed' (CookieConsent NENALEZEN).");
        // I kdy≈æ CookieConsent nen√≠, inicializujeme TrackingService a consentProcessed ud√°lost
        if (typeof TrackingService !== 'undefined' && !window.trackingService) {
            const options = { debugMode: false, googleAdsId: 'AW-17046857865'};
            try {
                window.trackingService = new TrackingService(options);
                if(window.trackingService.debugMode) console.log('[cookie-config.js V5] TrackingService instance vytvo≈ôena (fallback - CookieConsent not found).');
                window.isTrackingServiceReady = true;
                if (window.trackingService.initBaseScripts) window.trackingService.initBaseScripts();
            } catch (e) {
                console.error('[cookie-config.js V5] CHYBA P≈òI INSTANCIACI TrackingService (fallback):', e);
                window.isTrackingServiceReady = false;
            }
        }
        // Ode≈°leme ud√°lost consentProcessed i v tomto fallback sc√©n√°≈ôi
        document.dispatchEvent(new CustomEvent('consentProcessed', { detail: { categories: null, consentState: null, status: 'error', error: 'CookieConsent not found' } }));
        // A explicitnƒõ zavol√°me pokus o spu≈°tƒõn√≠ fronty
        if (typeof window.attemptToTriggerTrackingActions === 'function') {
            window.attemptToTriggerTrackingActions('cookie-config.js fallback after synthetic consentProcessed');
        }

    }, 50);
}
// --- Konec souboru cookie-config.js ---