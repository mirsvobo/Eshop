const consentModeMap = {
    necessary: {}, // Nezbytn√© nemƒõn√≠ Google Consent Mode
    analytics: {
        analytics_storage: 'granted'
    },
    marketing: {
        ad_storage: 'granted',
        ad_user_data: 'granted',
        ad_personalization: 'granted'
    }
};

/**
 * Aktualizuje stav souhlasu v Google Consent Mode v2.
 * @param {string[]|undefined} acceptedCategories Pole n√°zv≈Ø p≈ôijat√Ωch kategori√≠ nebo undefined/null.
 */
function updateGoogleConsent(acceptedCategories) {
    console.log("[updateGoogleConsent] Funkce vol√°na s acceptedCategories:", JSON.stringify(acceptedCategories), "(Typ:", typeof acceptedCategories, ")");

    const consentUpdate = {
        analytics_storage: 'denied',
        ad_storage: 'denied',
        ad_user_data: 'denied',
        ad_personalization: 'denied'
    };

    if (acceptedCategories && Array.isArray(acceptedCategories)) {
        console.log("[updateGoogleConsent] AcceptedCategories je platn√© pole. Zpracov√°v√°m...");
        acceptedCategories.forEach(category => {
            console.log(`[updateGoogleConsent] Zpracov√°v√°m kategorii: ${category}`);
            if (consentModeMap[category]) {
                Object.assign(consentUpdate, consentModeMap[category]);
                console.log(`[updateGoogleConsent] Kategorie ${category} mapov√°na na:`, consentModeMap[category]);
            } else {
                console.log(`[updateGoogleConsent] Kategorie ${category} nem√° mapov√°n√≠ v consentModeMap.`);
            }
        });
    } else {
        console.warn("[updateGoogleConsent] acceptedCategories nen√≠ platn√© pole, nastavuji v≈°e na 'denied'.");
    }

    console.log("[updateGoogleConsent] Fin√°ln√≠ stav pro Google Consent Mode:", consentUpdate);
    if (typeof gtag === 'function') {
        gtag('consent', 'update', consentUpdate);
        console.log("[updateGoogleConsent] P≈ô√≠kaz gtag('consent', 'update', ...) odesl√°n.");
    } else {
        console.warn("[updateGoogleConsent] Funkce gtag nebyla nalezena p≈ôi pokusu o update souhlasu!");
    }

    // Inicializace ostatn√≠ch skript≈Ø (Sklik, Heureka) - vol√°n√≠ TrackingService
    if (typeof TrackingService !== 'undefined' && typeof TrackingService.initBaseScripts === 'function') {
        console.log("[updateGoogleConsent] Vol√°m TrackingService.initBaseScripts IHNED po aktualizaci souhlasu.");
        // === ZMƒöNA: Odebr√°no setTimeout ===
        TrackingService.initBaseScripts();
        // === KONEC ZMƒöNY ===
    } else {
        console.error("[updateGoogleConsent] TrackingService nebo initBaseScripts nejsou definov√°ny!");
        // Zde u≈æ nem√° smysl zkou≈°et znovu, proto≈æe by to mƒõlo b√Ωt definov√°no d√≠ky defer
    }
}

// Konfigurace a spu≈°tƒõn√≠ CookieConsent knihovny
CookieConsent.run({
    guiOptions: {
        consentModal: { layout: "box", position: "bottom right", equalWeightButtons: true, flipButtons: false },
        preferencesModal: { layout: "box", position: "right", equalWeightButtons: true, flipButtons: false }
    },
    categories: {
        necessary: { readOnly: true, enabled: true },
        analytics: { enabled: false, autoClear: { cookies: [{ name: /^_ga/ }, { name: '_ga' }] } },
        marketing: { enabled: false, autoClear: { cookies: [{ name: '_gcl_au' }, { name: '_fbp' }] } }
    },
    language: {
        default: "cs",
        translations: {
            cs: { /* ... texty z≈Øst√°vaj√≠ stejn√© ... */
                consentModal:{title:"Pou≈æ√≠v√°me cookies üç™",description:"Tyto webov√© str√°nky pou≈æ√≠vaj√≠ nezbytn√© cookies k zaji≈°tƒõn√≠ spr√°vn√©ho fungov√°n√≠ a sledovac√≠/marketingov√© cookies k pochopen√≠ toho, jak s nimi komunikujete (vƒçetnƒõ personalizace reklam). Tyto budou nastaveny a≈æ po va≈°em souhlasu. <a href='/gdpr' target='_blank' class='cc__link'>V√≠ce informac√≠</a>",acceptAllBtn:"P≈ôijmout v≈°e",acceptNecessaryBtn:"Odm√≠tnout v≈°e",showPreferencesBtn:"Spravovat p≈ôedvolby",},preferencesModal:{title:"Nastaven√≠ souhlasu s cookies",acceptAllBtn:"P≈ôijmout v≈°e",acceptNecessaryBtn:"Odm√≠tnout v≈°e",savePreferencesBtn:"Ulo≈æit nastaven√≠",closeIconLabel:"Zav≈ô√≠t",serviceCounterLabel:"Slu≈æba|Slu≈æby",sections:[{title:"Pou≈æit√≠ cookies",description:"Na na≈°em webu pou≈æ√≠v√°me cookies, abychom V√°m poskytli co nejrelevantnƒõj≈°√≠ slu≈æby a funkce. Nƒõkter√© jsou nezbytn√©, zat√≠mco jin√© n√°m pom√°haj√≠ zlep≈°ovat tento web a v√°≈° z√°≈æitek (analytick√© a marketingov√© cookies)."},{title:"Nezbytn√© cookies <span class=\"pm__badge\">V≈ædy povolen√©</span>",description:"Tyto cookies jsou nezbytn√© pro z√°kladn√≠ funkƒçnost webu a nelze je vypnout. Zahrnuj√≠ nap≈ô√≠klad cookies pro spr√°vu session nebo n√°kupn√≠ho ko≈°√≠ku.",linkedCategory:"necessary"},{title:"Analytick√© cookies",description:"Tyto cookies n√°m pom√°haj√≠ pochopit, jak n√°v≈°tƒõvn√≠ci pou≈æ√≠vaj√≠ n√°≈° web, abychom jej mohli vylep≈°ovat. Sb√≠raj√≠ anonymizovan√° data.",linkedCategory:"analytics",},{title:"Marketingov√© cookies",description:"Tyto cookies se pou≈æ√≠vaj√≠ ke sledov√°n√≠ n√°v≈°tƒõvn√≠k≈Ø nap≈ô√≠ƒç webov√Ωmi str√°nkami. Z√°mƒõrem je zobrazovat reklamy, kter√© jsou relevantn√≠ a poutav√© pro jednotliv√© u≈æivatele, a mƒõ≈ôit jejich √∫ƒçinnost.",linkedCategory:"marketing"},{title:"V√≠ce informac√≠",description:"Pro v√≠ce informac√≠ o tom, jak pou≈æ√≠v√°me cookies, si pros√≠m p≈ôeƒçtƒõte na≈°e <a href='/gdpr' target='_blank' class='cc__link'>Z√°sady pou≈æ√≠v√°n√≠ cookies</a>."}]}
            }
        }
    },
    onFirstConsent: function({ categories }) {
        console.log("CookieConsent onFirstConsent triggered.");
        const preferences = CookieConsent.getUserPreferences();
        console.log("CookieConsent preferences [onFirstConsent]:", preferences);
        updateGoogleConsent(preferences.acceptedCategories);
    },
    onConsent: function({ categories }) {
        console.log("CookieConsent onConsent triggered.");
        const preferences = CookieConsent.getUserPreferences();
        console.log("CookieConsent preferences [onConsent]:", preferences);
        updateGoogleConsent(preferences.acceptedCategories);
    },
    onChange: function({ categories }) {
        console.log("CookieConsent onChange triggered.");
        const preferences = CookieConsent.getUserPreferences();
        console.log("CookieConsent preferences [onChange]:", preferences);
        updateGoogleConsent(preferences.acceptedCategories);
    }
});