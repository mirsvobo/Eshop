console.log("DEBUG: cookie-config.js script loaded (Consent Mode v2 version).");const consentModeMap={necessary:{},analytics:{analytics_storage:'granted'},marketing:{ad_storage:'granted',ad_user_data:'granted',ad_personalization:'granted'}};function updateGoogleConsent(acceptedCategories){const consentUpdate={analytics_storage:'denied',ad_storage:'denied',ad_user_data:'denied',ad_personalization:'denied'};if(acceptedCategories&&Array.isArray(acceptedCategories)){acceptedCategories.forEach(category=>{if(consentModeMap[category]){Object.assign(consentUpdate,consentModeMap[category])}})}else{console.warn("updateGoogleConsent: acceptedCategories is not a valid array, defaulting all to 'denied'.")}
    console.log("Updating Google Consent Mode with:",consentUpdate);if(typeof gtag==='function'){gtag('consent','update',consentUpdate);console.log("Google Consent Mode update command sent.")}else{console.warn("gtag function not found when trying to update consent.")}
    if(typeof TrackingService!=='undefined'&&typeof TrackingService.initBaseScripts==='function'){console.log("Calling TrackingService.initBaseScripts after consent update.");setTimeout(()=>{TrackingService.initBaseScripts()},100)}else{console.warn("TrackingService not ready when trying to initBaseScripts after consent update.");setTimeout(()=>{if(typeof TrackingService!=='undefined'&&typeof TrackingService.initBaseScripts==='function'){console.log("Retrying TrackingService.initBaseScripts after delay...");TrackingService.initBaseScripts()}else{console.error("TrackingService still not defined after delay!")}},250)}}
CookieConsent.run({guiOptions:{consentModal:{layout:"box",position:"bottom right",equalWeightButtons:!0,flipButtons:!1},preferencesModal:{layout:"box",position:"right",equalWeightButtons:!0,flipButtons:!1}},categories:{necessary:{readOnly:!0,enabled:!0},analytics:{enabled:!1,autoClear:{cookies:[{name:/^_ga/},{name:'_ga'}]}},marketing:{enabled:!1,autoClear:{cookies:[{name:'_gcl_au'},{name:'_fbp'}]}}},language:{default:"cs",translations:{cs:{consentModal:{title:"Pou≈æ√≠v√°me cookies üç™",description:"Tyto webov√© str√°nky pou≈æ√≠vaj√≠ nezbytn√© cookies k zaji≈°tƒõn√≠ spr√°vn√©ho fungov√°n√≠ a sledovac√≠/marketingov√© cookies k pochopen√≠ toho, jak s nimi komunikujete (vƒçetnƒõ personalizace reklam). Tyto budou nastaveny a≈æ po va≈°em souhlasu. <a href='/gdpr' target='_blank' class='cc__link'>V√≠ce informac√≠</a>",acceptAllBtn:"P≈ôijmout v≈°e",acceptNecessaryBtn:"Odm√≠tnout v≈°e",showPreferencesBtn:"Spravovat p≈ôedvolby",},preferencesModal:{title:"Nastaven√≠ souhlasu s cookies",acceptAllBtn:"P≈ôijmout v≈°e",acceptNecessaryBtn:"Odm√≠tnout v≈°e",savePreferencesBtn:"Ulo≈æit nastaven√≠",closeIconLabel:"Zav≈ô√≠t",serviceCounterLabel:"Slu≈æba|Slu≈æby",sections:[{title:"Pou≈æit√≠ cookies",description:"Na na≈°em webu pou≈æ√≠v√°me cookies, abychom V√°m poskytli co nejrelevantnƒõj≈°√≠ slu≈æby a funkce. Nƒõkter√© jsou nezbytn√©, zat√≠mco jin√© n√°m pom√°haj√≠ zlep≈°ovat tento web a v√°≈° z√°≈æitek (analytick√© a marketingov√© cookies)."},{title:"Nezbytn√© cookies <span class=\"pm__badge\">V≈ædy povolen√©</span>",description:"Tyto cookies jsou nezbytn√© pro z√°kladn√≠ funkƒçnost webu a nelze je vypnout. Zahrnuj√≠ nap≈ô√≠klad cookies pro spr√°vu session nebo n√°kupn√≠ho ko≈°√≠ku.",linkedCategory:"necessary"},{title:"Analytick√© cookies",description:"Tyto cookies n√°m pom√°haj√≠ pochopit, jak n√°v≈°tƒõvn√≠ci pou≈æ√≠vaj√≠ n√°≈° web, abychom jej mohli vylep≈°ovat. Sb√≠raj√≠ anonymizovan√° data.",linkedCategory:"analytics",},{title:"Marketingov√© cookies",description:"Tyto cookies se pou≈æ√≠vaj√≠ ke sledov√°n√≠ n√°v≈°tƒõvn√≠k≈Ø nap≈ô√≠ƒç webov√Ωmi str√°nkami. Z√°mƒõrem je zobrazovat reklamy, kter√© jsou relevantn√≠ a poutav√© pro jednotliv√© u≈æivatele, a mƒõ≈ôit jejich √∫ƒçinnost.",linkedCategory:"marketing"},{title:"V√≠ce informac√≠",description:"Pro v√≠ce informac√≠ o tom, jak pou≈æ√≠v√°me cookies, si pros√≠m p≈ôeƒçtƒõte na≈°e <a href='/gdpr' target='_blank' class='cc__link'>Z√°sady pou≈æ√≠v√°n√≠ cookies</a>."}]}}}},onFirstConsent:function({categories}){console.log("CookieConsent onFirstConsent triggered. Accepted categories:",categories);const acceptedCategories=CookieConsent.getUserPreferences().acceptedCategories;updateGoogleConsent(acceptedCategories)},onConsent:function({categories}){console.log("CookieConsent onConsent triggered. Accepted categories:",categories);const acceptedCategories=CookieConsent.getUserPreferences().acceptedCategories;updateGoogleConsent(acceptedCategories)},onChange:function({categories}){console.log("CookieConsent onChange triggered. Accepted categories:",categories);const acceptedCategories=CookieConsent.getUserPreferences().acceptedCategories;updateGoogleConsent(acceptedCategories)}})